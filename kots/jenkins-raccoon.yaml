apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins-casc-reload
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins-schedule-agents
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/log
  - persistentvolumeclaims
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins-schedule-agents
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins-schedule-agents
subjects:
- kind: ServiceAccount
  name: jenkins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins-watch-configmaps
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins-casc-reload
subjects:
- kind: ServiceAccount
  name: jenkins
---
apiVersion: v1
data:
  apply_config.sh: |-
    set -e
    echo "disable Setup Wizard"
    # Prevent Setup Wizard when JCasC is enabled
    echo $JENKINS_VERSION > /var/jenkins_home/jenkins.install.UpgradeWizard.state
    echo $JENKINS_VERSION > /var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion
    echo "download plugins"
    # Install missing plugins
    cp /var/jenkins_config/plugins.txt /var/jenkins_home;
    rm -rf /usr/share/jenkins/ref/plugins/*.lock
    version () { echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'; }
    if [ -f "/usr/share/jenkins/jenkins.war" ] && [ -n "$(command -v jenkins-plugin-cli)" 2>/dev/null ] && [ $(version $(jenkins-plugin-cli --version)) -ge $(version "2.1.1") ]; then
      jenkins-plugin-cli --war "/usr/share/jenkins/jenkins.war" --plugin-file "/var/jenkins_home/plugins.txt" --latest false;
    else
      /usr/local/bin/install-plugins.sh `echo $(cat /var/jenkins_home/plugins.txt)`;
    fi
    echo "copy plugins to shared volume"
    # Copy plugins to shared volume
    yes n | cp -i /usr/share/jenkins/ref/plugins/* /var/jenkins_plugins/;
    echo "finished initialization"
  plugins.txt: |-
    kubernetes:1.29.2
    workflow-aggregator:2.6
    git:4.6.0
    configuration-as-code:1.47
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins
---
apiVersion: v1
data:
  jcasc-default-config.yaml: |-
    jenkins:
      authorizationStrategy:
        loggedInUsersCanDoAnything:
          allowAnonymousRead: false
      securityRealm:
        local:
          allowsSignup: false
          enableCaptcha: false
          users:
          - id: "${chart-admin-username}"
            name: "Jenkins Admin"
            password: "${chart-admin-password}"
      disableRememberMe: false
      remotingSecurity:
        enabled: true
      mode: NORMAL
      numExecutors: 0
      projectNamingStrategy: "standard"
      markupFormatter:
        plainText
      clouds:
      - kubernetes:
          containerCapStr: "10"
          defaultsProviderTemplate: ""
          connectTimeout: "5"
          readTimeout: "15"
          jenkinsUrl: "http://jenkins:8080"
          jenkinsTunnel: "jenkins-agent:50000"
          maxRequestsPerHostStr: "32"
          name: "kubernetes"
          namespace: "'jenkins-raccoon-gitops'"
          serverUrl: "https://kubernetes.default"
          podLabels:
          - key: "jenkins/jenkins-jenkins-agent"
            value: "true"
          templates:
            - name: "default"
              id: d591f91bc14f64a22ae985a40af25e183925bcf2934d14c02f9026358a3a047c
              containers:
              - name: "jnlp"
                alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                command:
                envVars:
                  - envVar:
                      key: "JENKINS_URL"
                      value: "http://jenkins.'jenkins-raccoon-gitops'.svc.cluster.local:8080/"
                image: "jenkins/inbound-agent:4.6-1"
                privileged: "false"
                resourceLimitCpu: 512m
                resourceLimitMemory: 512Mi
                resourceRequestCpu: 512m
                resourceRequestMemory: 512Mi
                runAsUser:
                runAsGroup:
                ttyEnabled: false
                workingDir: /home/jenkins
              idleMinutes: 0
              instanceCap: 2147483647
              label: "jenkins-jenkins-agent "
              nodeUsageMode: "NORMAL"
              podRetention: Never
              showRawYaml: true
              serviceAccount: "default"
              slaveConnectTimeoutStr: "100"
              yamlMergeStrategy: override
      crumbIssuer:
        standard:
          excludeClientIPFromCrumb: true
    security:
      apiToken:
        creationOfLegacyTokenEnabled: false
        tokenGenerationOnCreationEnabled: false
        usageStatisticsEnabled: true
    unclassified:
      location:
        adminAddress:
        url: http://jenkins:8080
kind: ConfigMap
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    jenkins-jenkins-config: "true"
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins-jenkins-jcasc-config
---
apiVersion: v1
data:
  run.sh: |-
    @test "Testing Jenkins UI is accessible" {
      curl --retry 48 --retry-delay 10 jenkins:8080/login
    }
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook: test
    kots.io/app-slug: jenkins-raccoon
  labels:
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins-tests
---
apiVersion: v1
data:
  jenkins-admin-password: cmt0OHlhaF9lcHc2Q0ZKLWRoZw==
  jenkins-admin-user: YWRtaW4=
kind: Secret
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins-agent
spec:
  ports:
  - name: agent-listener
    port: 50000
    targetPort: 50000
  selector:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: jenkins
  serviceName: jenkins
  template:
    metadata:
      annotations:
        checksum/config: 77fe0e1305658d90e596960d29ce61b653ff3def2b34ffa1048599292d3693d6
        kots.io/app-slug: jenkins-raccoon
      labels:
        app.kubernetes.io/component: jenkins-controller
        app.kubernetes.io/instance: jenkins
        app.kubernetes.io/name: jenkins
        kots.io/app-slug: jenkins-raccoon
        kots.io/backup: velero
    spec:
      containers:
      - args:
        - --httpPort=8080
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JAVA_OPTS
          value: -Dcasc.reload.token=$(POD_NAME)
        - name: JENKINS_OPTS
          value: ""
        - name: JENKINS_SLAVE_AGENT_PORT
          value: "50000"
        - name: CASC_JENKINS_CONFIG
          value: /var/jenkins_home/casc_configs
        image: jenkins/jenkins:2.277.2-jdk11
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /login
            port: http
          periodSeconds: 10
          timeoutSeconds: 5
        name: jenkins
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 50000
          name: agent-listener
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /login
            port: http
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 4096Mi
          requests:
            cpu: 50m
            memory: 256Mi
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /login
            port: http
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
          readOnly: false
        - mountPath: /var/jenkins_config
          name: jenkins-config
          readOnly: true
        - mountPath: /usr/share/jenkins/ref/plugins/
          name: plugin-dir
          readOnly: false
        - mountPath: /var/jenkins_home/casc_configs
          name: sc-config-volume
        - mountPath: /run/secrets/chart-admin-username
          name: admin-secret
          readOnly: true
          subPath: jenkins-admin-user
        - mountPath: /run/secrets/chart-admin-password
          name: admin-secret
          readOnly: true
          subPath: jenkins-admin-password
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LABEL
          value: jenkins-jenkins-config
        - name: FOLDER
          value: /var/jenkins_home/casc_configs
        - name: NAMESPACE
          value: jenkins-raccoon-gitops
        - name: REQ_URL
          value: http://localhost:8080/reload-configuration-as-code/?casc-reload-token=$(POD_NAME)
        - name: REQ_METHOD
          value: POST
        - name: REQ_RETRY_CONNECT
          value: "10"
        image: kiwigrid/k8s-sidecar:0.1.275
        imagePullPolicy: IfNotPresent
        name: config-reload
        resources: {}
        volumeMounts:
        - mountPath: /var/jenkins_home/casc_configs
          name: sc-config-volume
        - mountPath: /var/jenkins_home
          name: jenkins-home
      initContainers:
      - command:
        - sh
        - /var/jenkins_config/apply_config.sh
        image: jenkins/jenkins:2.277.2-jdk11
        imagePullPolicy: Always
        name: init
        resources:
          limits:
            cpu: 2000m
            memory: 4096Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
        - mountPath: /var/jenkins_config
          name: jenkins-config
        - mountPath: /usr/share/jenkins/ref/plugins
          name: plugins
        - mountPath: /var/jenkins_plugins
          name: plugin-dir
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: jenkins
      volumes:
      - emptyDir: {}
        name: plugins
      - configMap:
          name: jenkins
        name: jenkins-config
      - emptyDir: {}
        name: plugin-dir
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins
      - emptyDir: {}
        name: sc-config-volume
      - name: admin-secret
        secret:
          secretName: jenkins
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    kots.io/app-slug: jenkins-raccoon
  labels:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-3.3.5
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test-success
    kots.io/app-slug: jenkins-raccoon
  labels:
    kots.io/app-slug: jenkins-raccoon
    kots.io/backup: velero
  name: jenkins-ui-test-fylrp
spec:
  containers:
  - command:
    - /tools/bats/bin/bats
    - -t
    - /tests/run.sh
    image: jenkins/jenkins:2.277.2-jdk11
    name: jenkins-ui-test
    volumeMounts:
    - mountPath: /tests
      name: tests
      readOnly: true
    - mountPath: /tools
      name: tools
  initContainers:
  - args:
    - |
      # copy bats to tools dir
      set -ex
      cp -R /opt/bats /tools/bats/
    command:
    - bash
    - -c
    image: bats/bats:1.2.1
    name: test-framework
    volumeMounts:
    - mountPath: /tools
      name: tools
  restartPolicy: Never
  volumes:
  - configMap:
      name: jenkins-tests
    name: tests
  - emptyDir: {}
    name: tools
